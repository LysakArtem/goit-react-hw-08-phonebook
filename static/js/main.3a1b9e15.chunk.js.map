{"version":3,"sources":["redux/auth-operations.js","redux/selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","components/AppBar/AppBar.module.css","redux/actions.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/auth-slice.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","getContacts","contacts","getFilter","filter","getLoading","loading","getContactsFiltered","createSelector","normalizedFilter","toLowerCase","contact","name","includes","getIsLoggedIn","isLoggedIn","getUsername","user","module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","PrivateRoute","children","redirectTo","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","exact","className","s","link","activeClassName","activeLink","UserMenu","dispatch","useDispatch","avatar","defaultAvatar","container","src","alt","width","type","onClick","AuthNav","AppBar","header","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","authOperations","fallback","path","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","payload","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","contactsReducer","createReducer","id","filterReducer","loadingReducer","store","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a1b9e15.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {}\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {}\r\n  }\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","import { createSelector } from 'reselect';\r\nexport const getContacts = (state) => state.contacts;\r\nexport const getFilter = (state) => state.filter;\r\nexport const getLoading = (state) => state.loading;\r\n\r\nexport const getContactsFiltered = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\n\r\nexport const getUsername = (state) => state.auth.user.name;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3N9UW\",\"activeLink\":\"Navigation_activeLink__28cpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__38g6F\",\"activeLink\":\"AuthNav_activeLink__Sp2qt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1SDVk\",\"avatar\":\"UserMenu_avatar__2aDZh\",\"name\":\"UserMenu_name__1h1lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3FfFU\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('fetchContactSuccess');\r\nexport const fetchContactError = createAction('fetchContactError');\r\n\r\nexport const addContactRequest = createAction('addContactRequest');\r\nexport const addContactSuccess = createAction('addContactSuccess');\r\nexport const addContactError = createAction('addContactError');\r\n\r\nexport const removeContactRequest = createAction('removeContactRequest');\r\nexport const removeContactSuccess = createAction('removeContactSuccess');\r\nexport const removeContactError = createAction('removeContactError');\r\n\r\n// export const formSubmitHandler = createAction('contact/SubmitHandler');\r\n// export const removeContact = createAction('contact/removeContact');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../redux/selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n    >\r\n      Заметки\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e3cd3b0f.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsername } from '../../redux/selectors';\r\nimport operations from '../../redux/auth-operations';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUsername);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\r\n      <span className={s.name}>Добро пожаловать, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(operations.logOut())}>\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Логин\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { getIsLoggedIn } from '../../redux/selectors';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Switch } from 'react-router-dom';\n\nimport authOperations from './redux/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport './App.css';\nimport AppBar from './components/AppBar/AppBar';\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Suspense>\n      </Switch>\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  createReducer,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilter,\r\n} from './actions';\r\nimport authReducer from './auth-slice';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [payload, ...state];\r\n  },\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n    loading: loadingReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}